namespace AutoRegisterInject.Tests;

public partial class GenerationTests
{
   #region fields

   internal const string AttributeSourceOutput = """
                                                 // <auto-generated>
                                                 //     Automatically generated by AutoRegisterInject.
                                                 //     Changes made to this file may be lost and may cause undesirable behaviour.
                                                 // </auto-generated>
                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterScopedAttribute : System.Attribute
                                                 { 
                                                     internal RegisterScopedAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterKeyedScopedAttribute : System.Attribute
                                                 { 
                                                     internal RegisterKeyedScopedAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterScopedAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterScopedAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterKeyedScopedAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterKeyedScopedAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterSingletonAttribute : System.Attribute
                                                 { 
                                                     internal RegisterSingletonAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterKeyedSingletonAttribute : System.Attribute
                                                 { 
                                                     internal RegisterKeyedSingletonAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterSingletonAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterSingletonAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterKeyedSingletonAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterKeyedSingletonAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterTransientAttribute : System.Attribute
                                                 { 
                                                     internal RegisterTransientAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterKeyedTransientAttribute : System.Attribute
                                                 { 
                                                     internal RegisterKeyedTransientAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterTransientAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterTransientAttribute(params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class TryRegisterKeyedTransientAttribute : System.Attribute
                                                 { 
                                                     internal TryRegisterKeyedTransientAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
                                                 }

                                                 [System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
                                                 internal sealed class RegisterHostedServiceAttribute : System.Attribute { }
                                                 """;

   static readonly ReferenceAssemblies Reference =
      ReferenceAssemblies.Net.Net60.AddPackages(ImmutableArray.Create(new ("Microsoft.Extensions.DependencyInjection", "8.0.0"), new PackageIdentity("Microsoft.Extensions.Hosting.Abstractions", "8.0.0")));

   #endregion

   #region methods

   static Task RunGeneratorAsync(string sourceInput, string expectedSourceOutput) =>
      new GeneratorTest
      {
         ReferenceAssemblies = Reference,
         TestState =
         {
            Sources = { sourceInput },
            GeneratedSources =
            {
               (typeof(SourceGeneratorAdapter<Generator>), "AutoRegisterInject.Attributes.g.cs",
                AttributeSourceOutput),
               (typeof(SourceGeneratorAdapter<Generator>), "AutoRegisterInject.ServiceCollectionExtension.g.cs",
                expectedSourceOutput)
            }
         }
      }.RunAsync();

   [Fact]
   public async Task ShouldGenerateAttributesAndServiceCollectionExtensions()
   {
      const string expected = """
                              // <auto-generated>
                              //     Automatically generated by AutoRegisterInject.
                              //     Changes made to this file may be lost and may cause undesirable behaviour.
                              // </auto-generated>
                              using Microsoft.Extensions.DependencyInjection;
                              using Microsoft.Extensions.DependencyInjection.Extensions;
                              public static class AutoRegisterInjectServiceCollectionExtension
                              {
                                  public static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegisterFromTestProject(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
                                  {
                                      return AutoRegister(serviceCollection);
                                  }
                              
                                  internal static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegister(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
                                  {
                                      
                                      return serviceCollection;
                                  }
                              }
                              """;

      await RunGeneratorAsync(string.Empty, expected);
   }

   #endregion
}